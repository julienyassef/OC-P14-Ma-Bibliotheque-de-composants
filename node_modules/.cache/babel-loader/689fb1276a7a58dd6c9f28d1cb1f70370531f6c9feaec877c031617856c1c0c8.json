{"ast":null,"code":"var _jsxFileName = \"/Users/jyassef/Documents/OC/OC P14 WEALTH HEALTH/ma-bibliotheque-de-composants/src/lib/Modal/Modal.jsx\",\n  _s = $RefreshSig$();\n//scss\nimport './Modal.scss';\n\n//React\nimport React, { useEffect, useRef } from 'react';\n\n// Icon Cross close par défault sur la modal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCloseIcon = /*#__PURE__*/_jsxDEV(\"svg\", {\n  viewBox: \"0 0 24 24\",\n  width: \"18\",\n  height: \"18\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  fill: \"none\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  children: [/*#__PURE__*/_jsxDEV(\"line\", {\n    x1: \"18\",\n    y1: \"6\",\n    x2: \"6\",\n    y2: \"18\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n    x1: \"6\",\n    y1: \"6\",\n    x2: \"18\",\n    y2: \"18\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this);\nfunction Modal({\n  isOpen,\n  handleClose,\n  title,\n  content,\n  disableScroll = true,\n  closeIcon = defaultCloseIcon\n}) {\n  _s();\n  const modalRef = useRef(null);\n\n  // logique pour empecher de scroller lorsque la modal est ouverte\n  useEffect(() => {\n    if (disableScroll) {\n      const body = document.body;\n      body.classList.toggle('no-scroll', isOpen);\n      return () => body.classList.remove('no-scroll');\n    }\n  }, [isOpen, disableScroll]);\n\n  // logique pour fermer la modale avec ESC\n  useEffect(() => {\n    function handleKeyDown(event) {\n      if (event.key === 'Escape') {\n        handleClose();\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleClose]);\n\n  // logique pour fermer la modale avec click exterieur modal\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        handleClose();\n      }\n    }\n    // Ajoute l'écouteur d'événements au document\n    document.addEventListener('mousedown', handleClickOutside);\n\n    // Nettoie l'écouteur d'événements lors du démontage du composant\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [handleClose]); // S'assure que le handler ne change pas\n\n  return isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `wrapperModal`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapperModal__modal\",\n      ref: modalRef,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"wrapperModal__modal__iconClose\",\n        onClick: handleClose,\n        children: closeIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), title && /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"wrapperModal__modal__title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapperModal__modal__content\",\n        children: [content, /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"wrapperModal__modal__linkClose\",\n          onClick: handleClose,\n          children: \"Fermer la modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this) : null;\n}\n_s(Modal, \"S0kEBwDghbe+1BsR9jPHd4ncGXM=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","defaultCloseIcon","viewBox","width","height","stroke","strokeWidth","fill","strokeLinecap","strokeLinejoin","children","x1","y1","x2","y2","fileName","_jsxFileName","lineNumber","columnNumber","Modal","isOpen","handleClose","title","content","disableScroll","closeIcon","_s","modalRef","body","document","classList","toggle","remove","handleKeyDown","event","key","addEventListener","removeEventListener","handleClickOutside","current","contains","target","className","ref","onClick","href","_c","$RefreshReg$"],"sources":["/Users/jyassef/Documents/OC/OC P14 WEALTH HEALTH/ma-bibliotheque-de-composants/src/lib/Modal/Modal.jsx"],"sourcesContent":["//scss\nimport './Modal.scss'\n\n//React\nimport React, { useEffect, useRef } from 'react';\n\n\n// Icon Cross close par défault sur la modal\nconst defaultCloseIcon = (\n  <svg viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n  </svg>\n);\n\nfunction Modal({ isOpen, handleClose, title, content, disableScroll = true, closeIcon = defaultCloseIcon }) {\n  \n  const modalRef = useRef(null);\n\n\n  // logique pour empecher de scroller lorsque la modal est ouverte\n  useEffect(() => {\n    if (disableScroll) {\n      const body = document.body;\n      body.classList.toggle('no-scroll', isOpen);\n  \n      return () => body.classList.remove('no-scroll');\n    }\n  }, [isOpen, disableScroll]);\n  \n  // logique pour fermer la modale avec ESC\n  useEffect(() => {\n    function handleKeyDown(event) {\n      if (event.key === 'Escape') {\n        handleClose();\n      }\n    }\n  \n    document.addEventListener('keydown', handleKeyDown);\n  \n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleClose]);\n\n  // logique pour fermer la modale avec click exterieur modal\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        handleClose();\n      }\n    }\n    // Ajoute l'écouteur d'événements au document\n    document.addEventListener('mousedown', handleClickOutside);\n  \n    // Nettoie l'écouteur d'événements lors du démontage du composant\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [handleClose]); // S'assure que le handler ne change pas\n  \n  \n  return isOpen ? (\n    <div className={`wrapperModal`} >\n      <div className=\"wrapperModal__modal\" ref={modalRef}>\n        <span className=\"wrapperModal__modal__iconClose\" onClick={handleClose}>\n        {closeIcon}\n        </span>\n        {title && <h2 className=\"wrapperModal__modal__title\">\n          {title}\n        </h2>}\n        <div className=\"wrapperModal__modal__content\" >{content}\n        {/* Lien pour fermer la modal */}\n        <a href=\"#\" className=\"wrapperModal__modal__linkClose\" onClick={handleClose}>Fermer la modal</a></div>\n      </div>\n    </div>\n  ) : null;\n}\n\nexport default Modal"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}